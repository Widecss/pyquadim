name: Upload Python Package

on:
  release:
    types: [ published ]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  deploy:
    runs-on: ${{ matrix.platform.os }}
    strategy:
      matrix:
        python-version: [ "3.7","3.8","3.9","3.10","3.11" ]
        platform: [
          { os: "macos-latest",   python-architecture: "x64", rust-target: "x86_64-apple-darwin" },
          { os: "ubuntu-latest", python-architecture: "x64", rust-target: "x86_64-unknown-linux-gnu" },
          { os: "windows-latest", python-architecture: "x64", rust-target: "x86_64-pc-windows-msvc" },
        ]
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          architecture: ${{ matrix.platform.python-architecture }}

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          target: ${{ matrix.platform.rust-target }}

      - name: Build package
        run: |
          pip install -r requirements.txt
          python setup.py sdist bdist_wheel

      - name: Rename unsupported platform tag 'linux_x86_64'
        if: ${{ matrix.platform.os == 'ubuntu-latest' }}
        run: |
          pip install --upgrade auditwheel
          auditwheel repair dist/*.whl

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}